import{D as h,d as _,e as C,f as T,g as d,h as M,j as f,ka as B,n as y,s as v,u as W,w as k,x}from"./chunk-RMUOB2GJ.js";var P={url:"",deserializer:o=>JSON.parse(o.data),serializer:o=>JSON.stringify(o)},E="WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }",b=class o extends M{constructor(i,e){if(super(),this._socket=null,i instanceof T)this.destination=e,this.source=i;else{let t=this._config=Object.assign({},P);if(this._output=new d,typeof i=="string")t.url=i;else for(let n in i)i.hasOwnProperty(n)&&(t[n]=i[n]);if(!t.WebSocketCtor&&WebSocket)t.WebSocketCtor=WebSocket;else if(!t.WebSocketCtor)throw new Error("no WebSocket constructor can be found");this.destination=new f}}lift(i){let e=new o(this._config,this.destination);return e.operator=i,e.source=this,e}_resetState(){this._socket=null,this.source||(this.destination=new f),this._output=new d}multiplex(i,e,t){let n=this;return new T(r=>{try{n.next(i())}catch(a){r.error(a)}let s=n.subscribe({next:a=>{try{t(a)&&r.next(a)}catch(c){r.error(c)}},error:a=>r.error(a),complete:()=>r.complete()});return()=>{try{n.next(e())}catch(a){r.error(a)}s.unsubscribe()}})}_connectSocket(){let{WebSocketCtor:i,protocol:e,url:t,binaryType:n}=this._config,r=this._output,s=null;try{s=e?new i(t,e):new i(t),this._socket=s,n&&(this._socket.binaryType=n)}catch(c){r.error(c);return}let a=new _(()=>{this._socket=null,s&&s.readyState===1&&s.close()});s.onopen=c=>{let{_socket:u}=this;if(!u){s.close(),this._resetState();return}let{openObserver:w}=this._config;w&&w.next(c);let g=this.destination;this.destination=C.create(l=>{if(s.readyState===1)try{let{serializer:m}=this._config;s.send(m(l))}catch(m){this.destination.error(m)}},l=>{let{closingObserver:m}=this._config;m&&m.next(void 0),l&&l.code?s.close(l.code,l.reason):r.error(new TypeError(E)),this._resetState()},()=>{let{closingObserver:l}=this._config;l&&l.next(void 0),s.close(),this._resetState()}),g&&g instanceof f&&a.add(g.subscribe(this.destination))},s.onerror=c=>{this._resetState(),r.error(c)},s.onclose=c=>{s===this._socket&&this._resetState();let{closeObserver:u}=this._config;u&&u.next(c),c.wasClean?r.complete():r.error(c)},s.onmessage=c=>{try{let{deserializer:u}=this._config;r.next(u(c))}catch(u){r.error(u)}}}_subscribe(i){let{source:e}=this;return e?e.subscribe(i):(this._socket||this._connectSocket(),this._output.subscribe(i),i.add(()=>{let{_socket:t}=this;this._output.observers.length===0&&(t&&(t.readyState===1||t.readyState===0)&&t.close(),this._resetState())}),i)}unsubscribe(){let{_socket:i}=this;i&&(i.readyState===1||i.readyState===0)&&i.close(),this._resetState(),super.unsubscribe()}};function p(o){return new b(o)}var S=class o{visibleSignal=h(!document.hidden);constructor(){document.addEventListener("visibilitychange",()=>{this.visibleSignal.set(!document.hidden)})}get isVisible(){return this.visibleSignal.asReadonly()}static \u0275fac=function(e){return new(e||o)};static \u0275prov=k({token:o,factory:o.\u0275fac,providedIn:"root"})};var I=class o{streams=new Map;multiWs=null;multiSignal=h([]);multiDestroy$=new d;multiPairs=[];multiIsConnected=!1;RECONNECT_INTERVAL=5e3;activeSymbols=new Set;appVisibility=x(S);constructor(){B(()=>{this.appVisibility.isVisible()?this.reconnectAll():this.disconnectAll()})}subscribeToTicker(i){let e=i.toUpperCase();if(this.activeSymbols.add(e),this.streams.has(e)){let s=this.streams.get(e);return s.isConnected||this.connectTickerStream(e,i),s.signal.asReadonly()}let t=h(null),r={ws:null,destroy$:new d,signal:t,isConnected:!1};return this.streams.set(e,r),this.connectTickerStream(e,i),t.asReadonly()}connectTickerStream(i,e){let t=this.streams.get(i);if(!t||t.isConnected)return;let n=p({url:`wss://stream.binance.com:9443/ws/${e.toLowerCase()}@ticker`,openObserver:{next:()=>{console.log(`[BinanceWebsocketService] Ticker WebSocket connected for ${e}`),t.isConnected=!0}},closeObserver:{next:()=>{console.log(`[BinanceWebsocketService] Ticker WebSocket closed for ${e}`),t.isConnected=!1}}});t.ws=n,n.pipe(v({delay:()=>y(this.RECONNECT_INTERVAL),resetOnSuccess:!0}),W(t.destroy$)).subscribe({next:r=>{try{let s={symbol:r.s,price:parseFloat(r.c),change:parseFloat(r.P)};t.signal.set(s)}catch(s){console.error("[BinanceWebsocketService] Message processing error:",s)}},error:r=>{console.error(`[BinanceWebsocketService] Ticker WebSocket error for ${e}:`,r),t.isConnected=!1},complete:()=>{console.log(`[BinanceWebsocketService] Ticker WebSocket connection closed for ${e}`),t.isConnected=!1}})}subscribeToTickers(i){return this.multiPairs=i,this.multiIsConnected||this.connectMultiTickerStream(),this.multiSignal.asReadonly()}connectMultiTickerStream(){if(this.multiPairs.length===0||this.multiIsConnected)return;this.disconnectMultiTickerStream();let i=this.multiPairs.map(t=>`${t.toLowerCase()}@ticker`).join("/");this.multiWs=p({url:`wss://stream.binance.com:9443/stream?streams=${i}`,openObserver:{next:()=>{console.log("[BinanceWebsocketService] Multi-ticker WebSocket connected"),this.multiIsConnected=!0}},closeObserver:{next:()=>{console.log("[BinanceWebsocketService] Multi-ticker WebSocket closed"),this.multiIsConnected=!1}}});let e={};this.multiWs.pipe(v({delay:()=>y(this.RECONNECT_INTERVAL),resetOnSuccess:!0}),W(this.multiDestroy$)).subscribe({next:t=>{try{if(t.data){let n={symbol:t.data.s,price:parseFloat(t.data.c),change:parseFloat(t.data.P)};e[n.symbol]=n,this.multiSignal.set(Object.values(e))}}catch(n){console.error("[BinanceWebsocketService] Multi-ticker message processing error:",n)}},error:t=>{console.error("[BinanceWebsocketService] Multi-ticker WebSocket error:",t),this.multiIsConnected=!1},complete:()=>{console.log("[BinanceWebsocketService] Multi-ticker WebSocket connection closed"),this.multiIsConnected=!1}})}disconnectAll(){console.log("[BinanceWebsocketService] Disconnecting all streams");for(let[i,e]of this.streams.entries())e.ws&&e.isConnected&&(e.ws.complete(),e.ws=null,e.isConnected=!1);this.disconnectMultiTickerStream()}disconnectMultiTickerStream(){this.multiWs&&this.multiIsConnected&&(this.multiWs.complete(),this.multiWs=null,this.multiIsConnected=!1)}reconnectAll(){console.log("[BinanceWebsocketService] Reconnecting all disconnected streams");for(let i of this.activeSymbols){let e=i.toUpperCase(),t=this.streams.get(e);t&&!t.isConnected&&this.connectTickerStream(e,i)}this.multiPairs.length>0&&!this.multiIsConnected&&this.connectMultiTickerStream()}unsubscribeFromTicker(i){let e=i.toUpperCase(),t=this.streams.get(e);t&&(t.destroy$.next(),t.destroy$.complete(),t.ws&&t.ws.complete(),this.streams.delete(e)),this.activeSymbols.delete(e)}unsubscribeFromTickers(){this.disconnectMultiTickerStream(),this.clearMultiPairs()}clearMultiPairs(){this.multiPairs=[],this.multiSignal.set([])}closeAll(){for(let[i,e]of this.streams.entries())e.destroy$.next(),e.destroy$.complete(),e.ws&&e.ws.complete(),this.streams.delete(i);this.activeSymbols.clear(),this.multiWs&&(this.multiDestroy$.next(),this.multiDestroy$.complete(),this.multiWs.complete(),this.multiWs=null),this.multiIsConnected=!1,this.multiPairs=[],this.multiSignal.set([])}getMultiSignal(){return this.multiSignal.asReadonly()}static \u0275fac=function(e){return new(e||o)};static \u0275prov=k({token:o,factory:o.\u0275fac,providedIn:"root"})};export{p as a,S as b,I as c};
