import{D as y,d as W,e as w,f as S,g as k,h as v,j as h,n as f,s as g,u as T,w as x}from"./chunk-RMUOB2GJ.js";var E={url:"",deserializer:a=>JSON.parse(a.data),serializer:a=>JSON.stringify(a)},M="WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }",m=class a extends v{constructor(e,r){if(super(),this._socket=null,e instanceof S)this.destination=r,this.source=e;else{let t=this._config=Object.assign({},E);if(this._output=new k,typeof e=="string")t.url=e;else for(let i in e)e.hasOwnProperty(i)&&(t[i]=e[i]);if(!t.WebSocketCtor&&WebSocket)t.WebSocketCtor=WebSocket;else if(!t.WebSocketCtor)throw new Error("no WebSocket constructor can be found");this.destination=new h}}lift(e){let r=new a(this._config,this.destination);return r.operator=e,r.source=this,r}_resetState(){this._socket=null,this.source||(this.destination=new h),this._output=new k}multiplex(e,r,t){let i=this;return new S(o=>{try{i.next(e())}catch(c){o.error(c)}let s=i.subscribe({next:c=>{try{t(c)&&o.next(c)}catch(n){o.error(n)}},error:c=>o.error(c),complete:()=>o.complete()});return()=>{try{i.next(r())}catch(c){o.error(c)}s.unsubscribe()}})}_connectSocket(){let{WebSocketCtor:e,protocol:r,url:t,binaryType:i}=this._config,o=this._output,s=null;try{s=r?new e(t,r):new e(t),this._socket=s,i&&(this._socket.binaryType=i)}catch(n){o.error(n);return}let c=new W(()=>{this._socket=null,s&&s.readyState===1&&s.close()});s.onopen=n=>{let{_socket:u}=this;if(!u){s.close(),this._resetState();return}let{openObserver:_}=this._config;_&&_.next(n);let d=this.destination;this.destination=w.create(l=>{if(s.readyState===1)try{let{serializer:b}=this._config;s.send(b(l))}catch(b){this.destination.error(b)}},l=>{let{closingObserver:b}=this._config;b&&b.next(void 0),l&&l.code?s.close(l.code,l.reason):o.error(new TypeError(M)),this._resetState()},()=>{let{closingObserver:l}=this._config;l&&l.next(void 0),s.close(),this._resetState()}),d&&d instanceof h&&c.add(d.subscribe(this.destination))},s.onerror=n=>{this._resetState(),o.error(n)},s.onclose=n=>{s===this._socket&&this._resetState();let{closeObserver:u}=this._config;u&&u.next(n),n.wasClean?o.complete():o.error(n)},s.onmessage=n=>{try{let{deserializer:u}=this._config;o.next(u(n))}catch(u){o.error(u)}}}_subscribe(e){let{source:r}=this;return r?r.subscribe(e):(this._socket||this._connectSocket(),this._output.subscribe(e),e.add(()=>{let{_socket:t}=this;this._output.observers.length===0&&(t&&(t.readyState===1||t.readyState===0)&&t.close(),this._resetState())}),e)}unsubscribe(){let{_socket:e}=this;e&&(e.readyState===1||e.readyState===0)&&e.close(),this._resetState(),super.unsubscribe()}};function p(a){return new m(a)}var B=class a{streams=new Map;multiWs=null;multiSignal=y([]);multiDestroy$=new k;multiPairs=[];RECONNECT_INTERVAL=5e3;subscribeToTicker(e){let r=e.toUpperCase();this.unsubscribeFromTicker(e);let t=y(null),i=new k,o=p({url:`wss://stream.binance.com:9443/ws/${e.toLowerCase()}@ticker`,openObserver:{next:()=>console.log("[BinanceWebsocketService] WebSocket connected")}});return o.pipe(g({delay:()=>f(this.RECONNECT_INTERVAL),resetOnSuccess:!0}),T(i)).subscribe({next:s=>{try{let c={symbol:s.s,price:parseFloat(s.c),change:parseFloat(s.P)};t.set(c)}catch(c){console.error("[BinanceWebsocketService] Message processing error:",c)}},error:s=>{console.error("[BinanceWebsocketService] WebSocket error:",s)},complete:()=>{console.log("[BinanceWebsocketService] WebSocket connection closed")}}),this.streams.set(r,{ws:o,destroy$:i,signal:t}),t}subscribeToTickers(e){this.unsubscribeFromTickers(),this.multiPairs=e;let r=e.map(i=>`${i.toLowerCase()}@ticker`).join("/");this.multiWs=p({url:`wss://stream.binance.com:9443/stream?streams=${r}`,openObserver:{next:()=>console.log("[BinanceWebsocketService] Multi-ticker WebSocket connected")}});let t={};return this.multiWs.pipe(g({delay:()=>f(this.RECONNECT_INTERVAL),resetOnSuccess:!0}),T(this.multiDestroy$)).subscribe({next:i=>{try{if(i.data){let o={symbol:i.data.s,price:parseFloat(i.data.c),change:parseFloat(i.data.P)};t[o.symbol]=o,this.multiSignal.set(Object.values(t))}}catch(o){console.error("[BinanceWebsocketService] Multi-ticker message processing error:",o)}},error:i=>{console.error("[BinanceWebsocketService] Multi-ticker WebSocket error:",i)},complete:()=>{console.log("[BinanceWebsocketService] Multi-ticker WebSocket connection closed")}}),this.multiSignal}unsubscribeFromTicker(e){let r=e.toUpperCase(),t=this.streams.get(r);t&&(t.destroy$.next(),t.destroy$.complete(),t.ws.complete(),this.streams.delete(r))}unsubscribeFromTickers(){this.multiWs&&(this.multiDestroy$.next(),this.multiDestroy$.complete(),this.multiWs.complete(),this.multiWs=null,this.multiSignal.set([]),this.multiPairs=[])}closeAll(){for(let[e,r]of this.streams.entries())r.destroy$.next(),r.destroy$.complete(),r.ws.complete(),this.streams.delete(e);this.unsubscribeFromTickers()}getMultiSignal(){return this.multiSignal}static \u0275fac=function(r){return new(r||a)};static \u0275prov=x({token:a,factory:a.\u0275fac,providedIn:"root"})};export{p as a,B as b};
